# docker-compose -f docker-compose.dev.yaml up --build -d
# docker-compose -f docker-compose.dev.yaml up --env-file FILE --build -d
services:
    # nginx
    web:
        image: nginx:latest
        ports:
          - "82:80"
        volumes:
            - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    # php
    # docker exec -it docker-php_app_1 bin/bash
    app:
        build:
            # When building a Docker image,
            # The build context is the directory Docker uses to look for files to copy into the image.
            context: .
            dockerfile: php/Dockerfile
            # File pour créer des images qui sont utilisés pour construire vos containers
            # Image exist aleardy bu we gonna customise
        volumes:
            -   ./app:/var/www/html
        environment:
            MYSQL_HOST: db
            MYSQL_PORT: ${MYSQL_PORT}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            REDIS_HOST: cache
            REDIS_PORT: ${REDIS_PORT}
    # mysql
    db:
        image: mysql:8.0
        volumes:
            -   mysqldata:/var/lib/mysql
        ports:
            - "4306:3306"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
    # redis
    # docker exec -ti docker-php_cache_1 redis-cli
    cache:
        image: redis:latest
volumes:
    mysqldata:



# docker-composer up --build ( will look at my docker files and build images for me )